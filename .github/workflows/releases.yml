name: '[push] [tag] Release'
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
    inputs:
      tag:
        description: The tag name to run this workflow for
        required: true
        type: string

jobs:
  test-release:
    name: Test the release by building a sample application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: 'stable'
      
      - name: "Install package"
        run: "nimble install -y"
      
      - name: "Build and run sample application"
        run: |
          cd tests/sampleapp
          nimble run

  draft-release:
    name: Draft github release
    needs: test-release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Get version
        id: get-version
        run: |
          if [ -z "${{ inputs.tag }}" ]; then
            echo "version=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Check version
        run: |
          if [ -z "${{ steps.get-version.outputs.version }}" ]; then
            echo "Could not get version!"
            false
          else
            echo "${{ steps.get-version.outputs.version }}"
          fi

      - name: Draft release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Make sure the generated documentation for this version was uploaded,
            then put the changes for this version from CHANGELOG.md here and
            publish.

            If the build fails, delete this tag and draft and try again after
            fixing the issue.
          draft: true
          name: libtrackerboy ${{ steps.get-version.outputs.version }}
          prerelease: ${{ startsWith( 'v0.', steps.get-version.outputs.version ) }}

  release:
    name: Generate documentation for the release and upload
    needs: draft-release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/docs/Gemfile
    steps:
      - uses: actions/checkout@v3

      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: 'stable'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Generate documentation
        run: |
          nimble install -y --depsOnly
          nim -d:gitRef:${{ needs.draft-release.outputs.version }} docs
          nim docsSpecs
      
      - name: Clone gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 0
          token: ${{ secrets.LIBTRACKERBOY_PAT }}
      
      - name: Upload documentation
        run: |
          cd gh-pages
          ./ci.py release ../htmldocs ${{ needs.draft-release.outputs.version }} ../CHANGELOG.md
          git add .
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git commit -a -m "github-actions: add release for ${{ needs.draft-release.outputs.version }}"
          git push origin gh-pages
      