BlockId	libtrackerboy/private/ioblocks.html#BlockId	ioblocks: BlockId	
BlockSize	libtrackerboy/private/ioblocks.html#BlockSize	ioblocks: BlockSize	
InputBlock	libtrackerboy/private/ioblocks.html#InputBlock	ioblocks: InputBlock	
OutputBlock	libtrackerboy/private/ioblocks.html#OutputBlock	ioblocks: OutputBlock	
toBlockId	libtrackerboy/private/ioblocks.html#toBlockId,string	ioblocks: toBlockId(str: string): BlockId	
begin	libtrackerboy/private/ioblocks.html#begin,InputBlock	ioblocks: begin(b: var InputBlock): BlockId	
isFinished	libtrackerboy/private/ioblocks.html#isFinished,InputBlock	ioblocks: isFinished(b: InputBlock): bool	
init	libtrackerboy/private/ioblocks.html#init,typedesc[InputBlock],Stream	ioblocks: init(T: typedesc[InputBlock]; stream: Stream): InputBlock	
size	libtrackerboy/private/ioblocks.html#size,InputBlock	ioblocks: size(ib: InputBlock): int	
readData	libtrackerboy/private/ioblocks.html#readData,InputBlock,pointer,Natural	ioblocks: readData(b: var InputBlock; data: pointer; size: Natural): bool	
read	libtrackerboy/private/ioblocks.html#read,InputBlock,T	ioblocks: read[T: not openArray](b: var InputBlock; val: var T): bool	
read	libtrackerboy/private/ioblocks.html#read,InputBlock,openArray[T]	ioblocks: read[T](b: var InputBlock; buf: var openArray[T]): bool	
init	libtrackerboy/private/ioblocks.html#init,typedesc[OutputBlock],Stream	ioblocks: init(T: typedesc[OutputBlock]; stream: Stream): OutputBlock	
begin	libtrackerboy/private/ioblocks.html#begin,OutputBlock,BlockId	ioblocks: begin(b: var OutputBlock; blockId: BlockId)	
finish	libtrackerboy/private/ioblocks.html#finish,OutputBlock	ioblocks: finish(b: var OutputBlock)	
writeData	libtrackerboy/private/ioblocks.html#writeData,OutputBlock,pointer,Natural	ioblocks: writeData(b: var OutputBlock; data: pointer; size: Natural)	
write	libtrackerboy/private/ioblocks.html#write,OutputBlock,T	ioblocks: write[T: not openArray](b: var OutputBlock; data: T)	
write	libtrackerboy/private/ioblocks.html#write,OutputBlock,openArray[T]	ioblocks: write[T](b: var OutputBlock; data: openArray[T])	
